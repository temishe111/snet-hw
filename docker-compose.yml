version: '3.8'

services:
  app:
    build: .docker/php
    container_name: php
    volumes:
      - ./:/snet-hw
    working_dir: /snet-hw
    networks:
      - snet

  web:
    image: nginx:alpine
    container_name: nginx
    depends_on:
      - app
    ports:
      - ${APP_PORT}:80
    volumes:
      - ./:/snet-hw
      - ./.docker/nginx/conf.d:/etc/nginx/conf.d
    networks:
      - snet

  pg:
    image: postgres:16
    container_name: psql
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGPORT: ${PGPORT}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./migrations/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - ${POSTGRES_EXT_PORT}:${PGPORT}
    networks:
      - snet

  pg-test:
    image: postgres:16
    container_name: psql_test
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGPORT: ${PGPORT_TEST}
    volumes:
      - pgdata-test:/var/lib/postgresql/data
      - ./migrations/init-test.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - ${POSTGRES_EXT_PORT_TEST}:${PGPORT_TEST}
    networks:
      - snet

  composer:
    image: composer:latest
    container_name: symfony_composer
    volumes:
      - ./:/snet-hw
    working_dir: /snet-hw
    entrypoint: [ "/bin/sh", "-c" ]
    command: [ "composer install" ]
    networks:
      - snet
    depends_on:
      - app

volumes:
  pgdata:
  pgdata-test:

networks:
  snet:
    driver: bridge
